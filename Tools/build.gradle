apply plugin: 'java'
apply plugin: 'kotlin'

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly localGroovy()
    testImplementation 'junit:junit:4.12'
}
repositories {
    mavenCentral()
}

ext.mainDir = new File(projectDir, "src/main")
ext.resourceDir = new File(mainDir, "resources/com/pqixing")
ext.javaFileDir = new File(mainDir, "java/com/pqixing")
task("copyClass") {
    group = "build"
    doFirst {
        def fileName = "ProjectInfo.java"
        writeFile("//" + new File(javaFileDir, fileName).text, new File(resourceDir, "setting/$fileName"))

        StringBuilder sb = new StringBuilder('''package com.pqixing
object ProjectInfoFiles {
    val files = listOf(''')
        def dir = new File(resourceDir, "ProjectInfo")
        def prefix = dir.name
        dir.listFiles().each { f1 ->
            if (f1.isDirectory()) {
                def prefix2 = f1.name
                f1.listFiles().each { f2 ->
                    sb.append("\n\"$prefix/$prefix2/$f2.name\",")
                }
            } else sb.append("\n\"$prefix/$f1.name\",")

        }
        sb.deleteCharAt(sb.length() - 1).append(" ) }")
        writeFile(sb.toString(), new File(javaFileDir, "ProjectInfoFiles.kt"))
    }
}

def writeFile(String txt, File out) {
    def writer = out.newWriter()
    if (!out.parentFile.exists()) out.parentFile.mkdirs()
    writer.write(txt)
    writer.flush()
    writer.close()
}

//打包成jar后,拷贝到当前目录
project.jar.doLast{
   copy {
       from "build/libs/Tools.jar"
       into "../libs/"
   }
}