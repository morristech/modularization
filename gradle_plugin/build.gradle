// 应用插件
apply plugin: "groovy"
apply plugin: "maven"
ext.autoDir = new File(projectDir, "src/main/java/auto")

sourceSets {
    main.groovy.srcDirs += autoDir.parent // 指定源码目录
}//
task("auto") {
    group = "build"
    doFirst {
        autoDir.mkdirs()
        writeMoulds(new File(projectDir, "src/main/resources/moulds"))
        String clsName = "Plugin"
        String url = project.uploadArchives.repositories.mavenDeployer.repository.url
        StringBuilder cls = new StringBuilder("package auto \n")
                .append("public class ").append(clsName).append(" {\n")
                .append("static String URL = '$url' \n")
                .append("static String VERSION = '${getLastVersion(url)}' \n")
                .append("\n }")
        new File(autoDir, "${clsName}.groovy").write(cls.toString())
    }
}

file("src/main/resources/moulds/AutoInclude").write(file("src/main/groovy/AutoInclude.groovy").text)

void writeMoulds(File dir) {
    if (!dir.isDirectory()) return
    String clsName = forGet(dir.name).substring(3)

    StringBuilder cls = new StringBuilder("package auto \n")
            .append("import com.pqixing.modularization.base.* \n")
            .append("public class ").append(clsName).append(" extends BaseString{\n")
//            .append("   return instance \n}\n")

    dir.listFiles().each { f ->
        if (f.isFile()) {
            cls.append("public String ").append(forGet(f.name)).append("() { return get('''").append(f.text).append("''')}\n")
        } else if (f.isDirectory()) {
            writeMoulds(f)
        }
    }
    cls.append("} \n")
    new File(autoDir, "${clsName}.groovy").write(cls.toString())
}

String forGet(String name) {
    return "get${name.substring(0, 1).toUpperCase()}${name.substring(1)}"
}
// 添加依赖
dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "com.alibaba:fastjson:1.2.44"
}

// 代码仓库
repositories {
    jcenter()
}
File localFile = file("local.properties")
if (!localFile.exists()) localFile.createNewFile()
ext.localFile = localFile
// 上传到本地代码库
uploadArchives {
    repositories {
        mavenDeployer {
//            repository(url:  "http://192.168.3.7:9527/nexus/content/repositories/androidsnap/") {
            repository(url: uri("/home/pqixing/.repo")) {
                authentication(userName: mavenUserName, password: mavenUserPsw)
            }
            pom.groupId = groupId // 组名
            pom.artifactId = "modularization" // 插件名
            pom.version = getLastVersion(repository.url) // 版本号
        }
    }
}
uploadArchives.dependsOn "clean"
uploadArchives.dependsOn "auto"

Properties loadProperties(File file) {
    def configs = new Properties()
    configs.load(file.newInputStream())
    return configs
}

String getLastVersion(def url) {
    return loadProperties(localFile).getProperty(url.toString())?.toString() ?: "1.0"
}

uploadArchives.doLast {
    //自动更新版本号
    String key = repositories.mavenDeployer.repository.url
    String oldVersion = getLastVersion(key)
    int lastSplit = oldVersion.lastIndexOf(".") + 1
    String newVersion = oldVersion.substring(0, lastSplit) + (oldVersion.substring(lastSplit).toInteger() + 1).toString()

    def localConfig = loadProperties(localFile)
    localConfig.put(key, newVersion)
    localConfig.store(localFile.newDataOutputStream(), null)
}

uploadArchives.dependsOn "auto"

